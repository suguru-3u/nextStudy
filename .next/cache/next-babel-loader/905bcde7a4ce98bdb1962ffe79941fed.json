{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk'; // ステート初期化\n\nconst initial = {\n  message: 'START',\n  data: [],\n  number: [],\n  result: 0\n}; // レデユーサー\n\nfunction calcReducer(state = initial, action) {\n  switch (action.type) {\n    // 計算実行\n    case 'ENTER':\n      let data2 = state.data.slice();\n      let s = action.value;\n      data2.unshift(s);\n      let num = s.replace(/[^0-9]/g, \"\");\n      let number2 = state.number.slice();\n      number2.unshift(num);\n      let result = state.result * 1 + num * 1;\n      return {\n        message: 'ENTER',\n        data: data2,\n        number: number2,\n        result: result\n      };\n\n    case 'RESET':\n      return {\n        message: 'RESET',\n        data: [],\n        number: [],\n        result: 0\n      };\n\n    default:\n      return state;\n  }\n} // iniStore関数\n\n\nexport function initStore(state = initial) {\n  return createStore(calcReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/oohirasuguru/Desktop/Study/React/reactStudy/next_app/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","initial","message","data","number","result","calcReducer","state","action","type","data2","slice","s","value","unshift","num","replace","number2","initStore"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,QAA0C,OAA1C;AACA,OAAOC,eAAP,MAA4B,aAA5B,C,CAEA;;AACA,MAAMC,OAAO,GAAG;AACZC,EAAAA,OAAO,EAAC,OADI;AAEZC,EAAAA,IAAI,EAAC,EAFO;AAGZC,EAAAA,MAAM,EAAC,EAHK;AAIZC,EAAAA,MAAM,EAAC;AAJK,CAAhB,C,CAOA;;AACA,SAASC,WAAT,CAAqBC,KAAK,GAAGN,OAA7B,EAAqCO,MAArC,EAA4C;AACxC,UAAOA,MAAM,CAACC,IAAd;AACM;AACF,SAAI,OAAJ;AACI,UAAIC,KAAK,GAAGH,KAAK,CAACJ,IAAN,CAAWQ,KAAX,EAAZ;AACA,UAAIC,CAAC,GAAGJ,MAAM,CAACK,KAAf;AACAH,MAAAA,KAAK,CAACI,OAAN,CAAcF,CAAd;AACA,UAAIG,GAAG,GAAGH,CAAC,CAACI,OAAF,CAAU,SAAV,EAAoB,EAApB,CAAV;AACA,UAAIC,OAAO,GAAGV,KAAK,CAACH,MAAN,CAAaO,KAAb,EAAd;AACAM,MAAAA,OAAO,CAACH,OAAR,CAAgBC,GAAhB;AACA,UAAIV,MAAM,GAAIE,KAAK,CAACF,MAAN,GAAe,CAAhB,GAAsBU,GAAG,GAAG,CAAzC;AACA,aAAM;AACFb,QAAAA,OAAO,EAAC,OADN;AAEFC,QAAAA,IAAI,EAACO,KAFH;AAGFN,QAAAA,MAAM,EAACa,OAHL;AAIFZ,QAAAA,MAAM,EAACA;AAJL,OAAN;;AAMJ,SAAK,OAAL;AACI,aAAM;AACFH,QAAAA,OAAO,EAAC,OADN;AAEFC,QAAAA,IAAI,EAAC,EAFH;AAGFC,QAAAA,MAAM,EAAC,EAHL;AAIFC,QAAAA,MAAM,EAAC;AAJL,OAAN;;AAMJ;AACI,aAAOE,KAAP;AAxBR;AA0BH,C,CAED;;;AACA,OAAO,SAASW,SAAT,CAAmBX,KAAK,GAAGN,OAA3B,EAAmC;AACtC,SAAOH,WAAW,CAACQ,WAAD,EAAaC,KAAb,EACdR,eAAe,CAACC,eAAD,CADD,CAAlB;AAEH","sourcesContent":["import {createStore,applyMiddleware} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\n// ステート初期化\nconst initial = {\n    message:'START',\n    data:[],\n    number:[],\n    result:0\n}\n\n// レデユーサー\nfunction calcReducer(state = initial,action){\n    switch(action.type){\n          // 計算実行\n        case'ENTER':\n            let data2 = state.data.slice();\n            let s = action.value;\n            data2.unshift(s);\n            let num = s.replace(/[^0-9]/g,\"\");\n            let number2 = state.number.slice();\n            number2.unshift(num);\n            let result = (state.result * 1) + (num * 1);\n            return{\n                message:'ENTER',\n                data:data2,\n                number:number2,\n                result:result\n            };\n        case 'RESET':\n            return{\n                message:'RESET',\n                data:[],\n                number:[],\n                result:0\n            };\n        default:\n            return state;\n    }\n}\n\n// iniStore関数\nexport function initStore(state = initial){\n    return createStore(calcReducer,state,\n        applyMiddleware(thunkMiddleware))\n}"]},"metadata":{},"sourceType":"module"}