{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from 'firebase'; // Firebaseの初期化\n\nvar donfig = {\n  apiKey: \"AIzaSyCMzXiDT5BTG6KKEfYcu5Hw3wAudmidirY\",\n  authDomain: \"suguru-react-ec230.firebaseapp.com\",\n  databaseURL: \"https://suguru-react-ec230-default-rtdb.firebaseio.com\",\n  projectId: \"suguru-react-ec230\",\n  storageBucket: \"suguru-react-ec230.appspot.com\",\n  messagingSenderId: \"736899467162\"\n};\nvar fireapp;\n\ntry {\n  firebase.initializeApp(config);\n} catch (error) {\n  console.log(error.message);\n}\n\nexport default firebase; // ステート初期化\n\nvar initial = {}; // レデユーサー（ダミー）\n\nfunction fireReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // 計算実行\n    case 'TESTACTION':\n      return state;\n\n    default:\n      return state;\n  }\n} // iniStore関数\n\n\nexport function initStore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  return createStore(fireReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/oohirasuguru/Desktop/Study/React/reactStudy/next_app/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","firebase","donfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","fireapp","initializeApp","config","error","console","log","message","initial","fireReducer","state","action","type","initStore"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,QAA0C,OAA1C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CAEA;;AACA,IAAIC,MAAM,GAAG;AACTC,EAAAA,MAAM,EAAE,yCADC;AAETC,EAAAA,UAAU,EAAE,oCAFH;AAGTC,EAAAA,WAAW,EAAE,wDAHJ;AAITC,EAAAA,SAAS,EAAE,oBAJF;AAKTC,EAAAA,aAAa,EAAE,gCALN;AAMTC,EAAAA,iBAAiB,EAAE;AANV,CAAb;AASA,IAAIC,OAAJ;;AACA,IAAI;AACAR,EAAAA,QAAQ,CAACS,aAAT,CAAuBC,MAAvB;AACH,CAFD,CAEC,OAAMC,KAAN,EAAY;AACTC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH;;AACD,eAAed,QAAf,C,CAEA;;AACA,IAAMe,OAAO,GAAG,EAAhB,C,CAGA;;AACA,SAASC,WAAT,GAA4C;AAAA,MAAvBC,KAAuB,uEAAfF,OAAe;AAAA,MAAPG,MAAO;;AACxC,UAAOA,MAAM,CAACC,IAAd;AACM;AACF,SAAI,YAAJ;AACI,aAAOF,KAAP;;AACJ;AACI,aAAOA,KAAP;AALR;AAOH,C,CAED;;;AACA,OAAO,SAASG,SAAT,GAAmC;AAAA,MAAhBH,KAAgB,uEAARF,OAAQ;AACtC,SAAOlB,WAAW,CAACmB,WAAD,EAAaC,KAAb,EACdnB,eAAe,CAACC,eAAD,CADD,CAAlB;AAEH","sourcesContent":["import {createStore,applyMiddleware} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from 'firebase';\n\n// Firebaseの初期化\nlet donfig = {\n    apiKey: \"AIzaSyCMzXiDT5BTG6KKEfYcu5Hw3wAudmidirY\",\n    authDomain: \"suguru-react-ec230.firebaseapp.com\",\n    databaseURL: \"https://suguru-react-ec230-default-rtdb.firebaseio.com\",\n    projectId: \"suguru-react-ec230\",\n    storageBucket: \"suguru-react-ec230.appspot.com\",\n    messagingSenderId: \"736899467162\",\n}\n\nlet fireapp;\ntry {\n    firebase.initializeApp(config);\n}catch(error){\n    console.log(error.message)\n}\nexport default firebase;\n\n// ステート初期化\nconst initial = {\n}\n\n// レデユーサー（ダミー）\nfunction fireReducer(state = initial,action){\n    switch(action.type){\n          // 計算実行\n        case'TESTACTION':\n            return state;\n        default:\n            return state;\n    }\n}\n\n// iniStore関数\nexport function initStore(state = initial){\n    return createStore(fireReducer,state,\n        applyMiddleware(thunkMiddleware))\n}"]},"metadata":{},"sourceType":"module"}