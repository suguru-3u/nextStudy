{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk'; // ステート初期化\n\nvar initial = {\n  message: 'START',\n  count: 0\n}; // レデユーサー\n\nfunction counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        message: 'INCREMENT',\n        count: state.count + 1\n      };\n\n    case 'DECREMENT':\n      return {\n        message: 'DECREMENT',\n        count: state.count - 1\n      };\n\n    case 'RESET':\n      return {\n        message: 'RESET',\n        count: initial.count\n      };\n\n    default:\n      return state;\n  }\n} // iniStore関数\n\n\nexport function iniStore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  return createStore(counterReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/oohirasuguru/Desktop/Study/React/reactStudy/next_app/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","initial","message","count","counterReducer","state","action","type","iniStore"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,QAA0C,OAA1C;AACA,OAAOC,eAAP,MAA4B,aAA5B,C,CAEA;;AACA,IAAMC,OAAO,GAAG;AACZC,EAAAA,OAAO,EAAC,OADI;AAEZC,EAAAA,KAAK,EAAC;AAFM,CAAhB,C,CAKA;;AACA,SAASC,cAAT,GAA+C;AAAA,MAAvBC,KAAuB,uEAAfJ,OAAe;AAAA,MAAPK,MAAO;;AAC3C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAI,WAAJ;AACI,aAAM;AACFL,QAAAA,OAAO,EAAC,WADN;AAEFC,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFnB,OAAN;;AAIJ,SAAK,WAAL;AACI,aAAM;AACFD,QAAAA,OAAO,EAAC,WADN;AAEFC,QAAAA,KAAK,EAACE,KAAK,CAACF,KAAN,GAAc;AAFlB,OAAN;;AAIJ,SAAK,OAAL;AACI,aAAM;AACFD,QAAAA,OAAO,EAAC,OADN;AAEFC,QAAAA,KAAK,EAACF,OAAO,CAACE;AAFZ,OAAN;;AAIJ;AACI,aAAOE,KAAP;AAjBR;AAmBH,C,CAED;;;AACA,OAAO,SAASG,QAAT,GAAkC;AAAA,MAAhBH,KAAgB,uEAARJ,OAAQ;AACrC,SAAOH,WAAW,CAACM,cAAD,EAAgBC,KAAhB,EACdN,eAAe,CAACC,eAAD,CADD,CAAlB;AAEH","sourcesContent":["import {createStore,applyMiddleware} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\n// ステート初期化\nconst initial = {\n    message:'START',\n    count:0\n}\n\n// レデユーサー\nfunction counterReducer(state = initial,action){\n    switch(action.type){\n        case'INCREMENT':\n            return{\n                message:'INCREMENT',\n                count: state.count + 1\n            };\n        case 'DECREMENT':\n            return{\n                message:'DECREMENT',\n                count:state.count - 1\n            };\n        case 'RESET':\n            return{\n                message:'RESET',\n                count:initial.count\n            };\n        default:\n            return state;\n    }\n}\n\n// iniStore関数\nexport function iniStore(state = initial){\n    return createStore(counterReducer,state,\n        applyMiddleware(thunkMiddleware))\n}"]},"metadata":{},"sourceType":"module"}